event /* 0 */
{
 EnforceAnimation();
 if(!flags[101])
 {
  flags[18]=2;
  flags[19]=1;
  flags[22]=1;
  flags[95]=2;
  flags[96]=4;
  flags[98]=1;
  flags[99]=1;
  flags[101]=1;
 }
 if(flags[18]=3)
 {
  flags[18]=1;
 }
 if(flags[18]=0)
 {
  AlterBTile(14,5,226,0);
  AlterBTile(14,7,533,1);
  AlterBTile(10,7,281,2);
 }
 if(flags[18]=1)
 {
  AlterBTile(14,6,226,0);
  AlterBTile(14,7,533,1);
  AlterBTile(10,7,464,2);
 }
 if(flags[19]=0)
 {
  AlterBTile(18,17,226,0);
  AlterBTile(19,17,532,1);
  AlterBTile(23,11,281,2);
 }
 if(flags[19]=2)
 {
  AlterBTile(20,17,226,0);
  AlterBTile(19,17,532,1);
  AlterBTile(23,11,464,2);
 }
 if(flags[19]=6)
 {
  AlterBTile(20,17,226,0);
  AlterBTile(19,17,532,1);
  AlterBTile(23,11,464,2);
 }
 if(flags[19]=3)
 {
  AlterBTile(21,17,226,0);
  AlterBTile(19,17,532,1);
  AlterBTile(23,11,463,2);
 }
 if(flags[19]=5)
 {
  AlterBTile(21,17,226,0);
  AlterBTile(19,17,532,1);
  AlterBTile(23,11,463,2);
 }
 if(flags[19]=4)
 {
  AlterBTile(22,17,226,0);
  AlterBTile(19,17,532,1);
  AlterBTile(23,11,284,2);
 }
 if(flags[20]=0)
 {
  AlterBTile(24,9,226,0);
  AlterBTile(24,10,533,1);
  AlterBTile(24,13,281,2);
 }
 if(flags[20]=2)
 {
  AlterBTile(24,11,226,0);
  AlterBTile(24,10,533,1);
  AlterBTile(24,13,284,2);
 }
 if(flags[21]=3)
 {
  flags[21]=1;
 }
 if(flags[21]=1)
 {
  AlterBTile(23,18,226,0);
  AlterBTile(23,17,533,1);
  AlterBTile(32,17,464,2);
 }
 if(flags[21]=2)
 {
  AlterBTile(23,19,226,0);
  AlterBTile(23,17,533,1);
  AlterBTile(32,17,284,2);
 }
 if(flags[22]=0)
 {
  AlterBTile(28,24,226,0);
  AlterBTile(29,24,532,1);
  AlterBTile(31,24,281,2);
 }
 if(flags[22]=2)
 {
  AlterBTile(30,24,226,0);
  AlterBTile(29,24,532,1);
  AlterBTile(31,24,284,2);
 }
 if(flags[95]=3)
 {
  flags[95]=1;
 }
 if(flags[95]=0)
 {
  AlterBTile(20,23,226,0);
  AlterBTile(22,23,532,1);
  AlterBTile(24,26,281,2);
 }
 if(flags[95]=1)
 {
  AlterBTile(21,23,226,0);
  AlterBTile(22,23,532,1);
  AlterBTile(24,26,464,2);
 }
 if(flags[96]=0)
 {
  AlterBTile(13,22,226,0);
  AlterBTile(17,22,533,1);
  AlterBTile(18,28,281,2);
 }
 if(flags[96]=7)
 {
  flags[96]=1;
 }
 if(flags[96]=6)
 {
  flags[96]=2;
 }
 if(flags[96]=5)
 {
  flags[96]=3;
 }
 if(flags[96]=1)
 {
  AlterBTile(14,22,226,0);
  AlterBTile(17,22,533,1);
  AlterBTile(18,28,462,2);
 }
 if(flags[96]=2)
 {
  AlterBTile(15,22,226,0);
  AlterBTile(17,22,533,1);
  AlterBTile(18,28,464,2);
 }
 if(flags[96]=3)
 {
  AlterBTile(16,22,226,0);
  AlterBTile(17,22,533,1);
  AlterBTile(18,28,463,2);
 }
 if(flags[97]=3)
 {
  flags[97]=1;
 }
 if(flags[97]=1)
 {
  AlterBTile(19,36,226,0);
  AlterBTile(18,36,532,1);
  AlterBTile(24,36,464,2);
 }
 if(flags[97]=2)
 {
  AlterBTile(20,36,226,0);
  AlterBTile(18,36,532,1);
  AlterBTile(24,36,284,2);
 }
 if(flags[98]=0)
 {
  AlterBTile(28,29,226,0);
  AlterBTile(29,29,532,1);
  AlterBTile(26,36,281,2);
 }
 if(flags[98]=2)
 {
  AlterBTile(30,29,226,0);
  AlterBTile(29,29,532,1);
  AlterBTile(26,36,284,2);
 }
 if(flags[99]=0)
 {
  AlterBTile(14,41,226,0);
  AlterBTile(15,41,532,1);
  AlterBTile(23,40,281,2);
 }
 if(flags[99]=2)
 {
  AlterBTile(16,41,226,0);
  AlterBTile(15,41,532,1);
  AlterBTile(23,40,284,2);
 }
 if(flags[100])
 {
  AlterBTile(20,46,226,0);
  AlterBTile(20,47,533,1);
  AlterBTile(20,45,284,2);
  AlterBTile(19,47,284,2);
 }
 CallEvent(23,23,14,75);
 CallEvent(23,24,22,75);
 CallEvent(23,25,14,80);
 CallEvent(23,26,22,80);
 if(flags[28])
 {
  AlterBTile(18,100,195,1);
  AlterBTile(18,101,195,1);
  AlterBTile(18,102,195,1);
 }
 if(flags[30])
 {
  AlterBTile(18,91,226,0);
  AlterBTile(18,92,226,0);
 }
}

event /* 1 */
{
 mapswitch("MOUNTAIN.MAP",21,6,0);
}

event /* 2 */
{
 ChainEvent(39,18,14,5,10,7);
}

event /* 3 */
{
 flags[19]+=1;
 if(flags[19]=8)
 {
  flags[19]=0;
 }
 for(a,0,4,1)
 {
  AlterBTile(18+a,17,532,1);
 }
 if(!flags[4000])
 {
  b=flags[19];
 }
 if(b=5)
 {
  b=3;
 }
 if(b=6)
 {
  b=2;
 }
 if(b=7)
 {
  b=1;
 }
 AlterBTile(18+b,17,226,0);
 if(b=0)
 {
  c=281;
 }
 if(b=1)
 {
  c=462;
 }
 if(b=2)
 {
  c=464;
 }
 if(b=3)
 {
  c=463;
 }
 if(b=4)
 {
  c=284;
 }
 AlterBTile(23,11,c,2);
 SoundEffect(3);
 WaitKeyUp();
}

event /* 4 */
{
 ChainEvent(39,20,24,9,24,13);
}

event /* 5 */
{
 ChainEvent(39,21,23,17,32,17);
}

}
event /* 6 */
{
 ChainEvent(40,22,28,24,31,24);
}

event /* 7 */
{
 Warp(42,44,0);
 Banner("B1",3);
}

event /* 8 */
{
 Warp(58,43,0);
 Banner("B1",3);
}

event /* 9 */
{
 Warp(14,12,0);
}

event /* 10 */
{
 Warp(30,12,0);
}

event /* 11 */
{
 warp(4,15,0);
}

event /* 12 */
{
 warp(18,108,0);
 Banner("Thermal Chamber",3);
}

event /* 13 */
{
 warp(20,54,0);
}

event /* 14 */
{
 warp(4,9,0);
}

event /* 15 */
{
 warp(5,70,0);
}

event /* 16 */
{
 ChainEvent(22,23,14,75,14);
}

event /* 17 */
{
 ChainEvent(22,24,22,75,17);
}

event /* 18 */
{
 ChainEvent(22,25,14,80,15);
}

event /* 19 */
{
 ChainEvent(22,26,22,80,16);
}

event /* 20 */
{
 if(!flags[34])
 {
  text(3,"Darin, I know more about magic",
         "than I do about machines. We",
         "shouldn't try to operate this.");
  return;
 }
 if(!item(22) AND char(2) AND !flags[28])
 {
  text(2,"Darin, let's go to my home in",
         "Rodne. There's a Thermal",
         "Activator in the basement.");
  return;
 }
 if(!flags[28])
 {
  text(2,"Here are controls for the",
         "device. I can insert the",
         "Thermal Activator here.");
  DestroyItem(22,0);
  text(1,"Sara, will this work? It",
         "will just melt the crystal",
         "and Crystal will be OK?");
  text(2,"Umm... huh? Oh yeah, sure.",
         "Let me just initialize the",
         "machine... THERE!");
  SoundEffect(12);
  For(a,16,0,-1)
  {
   earthquake(a,0,20);
  }
  AlterBTile(12,92,289,2);
  AlterBTile(13,92,289,2);
  AlterBTile(14,92,289,2);
  AlterBTile(15,92,289,2);
  AlterBTile(16,92,289,2);
  AlterBTile(17,92,289,2);
  AlterBTile(19,92,293,2);
  AlterBTile(20,92,293,2);
  AlterBTile(21,92,293,2);
  AlterBTile(22,92,293,2);
  AlterBTile(23,92,293,2);
  AlterBTile(24,92,293,2);
  AlterBTile(18,94,296,2);
  AlterBTile(18,95,296,2);
  AlterBTile(18,96,296,2);
  AlterBTile(18,100,195,1);
  AlterBTile(18,101,195,1);
  AlterBTile(18,102,195,1);
  text(2,"A ha! It worked. I knew I",
         "wasn't a fool for taking shop",
         "instead of Home Economics!");
  text(1,"But look, Sara! The commotion",
         "created by the machine made",
         "the walkway collapse!");
  text(2,"It's ok, Darin. We'll just",
         "find some other way out.",
         "RPG heroes always find a way.");
  AlterBTile(18,91,286,2);
  AlterBTile(18,92,288,2);
  text(1,"Look! The machine melted the",
         "crystal around Crystal! Thank",
         "you so much, Sara!");
  flags[28]=1;
 }
}

event /* 21 */
{
 if(!flags[29])
 {
  playmusic("CR_GUIT.S3M");
  text(1,"No! This can't be! Lord Stan",
         "has imprisoned Crystal in",
         "some sort of... crystal!");
  text(3,"This is tragic! Neat",
         "translucency effect, though,",
         "don't you think?");
  text(1,"He must be planning to keep",
         "her here until he comes up",
         "with an evil enough scheme.");
  text(1,"Do you suppose these strange",
         "machines might be able to free",
         "her, Dexter?");
  text(3,"Well, I don't know much about",
         "engineering, but I have an",
         "idea about how this works.");
  text(3,"But it would require a device",
         "known as a Thermal Activator,",
         "and I'm not sure what to do.");
  text(1,"But we can't just leave her",
         "like this, Dexter! There must",
         "be a way.");
  text(3,"Well, it is said that there is",
         "a machinist living in the",
         "forest city of Rodne.");
  text(3,"Rodne is beyond the southern",
         "edge of Raven Gulch. Shall we",
         "go? We can find help there.");
  text(1,"Rodne? That's not... based on",
         "some sort or Star Wars",
         "location name, is it?");
  text(3,"Of course not.","","");
  text(1,"Raven Gulch, eh? How will we",
         "cross the chasm to reach the",
         "southern ridge?");
  text(3,"That's no problem. I have a",
         "ranger friend there. He will",
         "let us cross.");
  playmusic("NONEXIST.MOD");
  text(1,"Alright, then. Let's go!",
         "Crystal, sit tight. I'll be",
         "back for you, I promise!");
  flags[29]=1;
 }
 if(flags[30])
 {
  return;
 }
 if(flags[28])
 {
  text(4,"Whu... am I awake? Darin, is",
         "that you?","");
  text(1,"Crystal! I'm so glad you're",
         "awake. I was worried about",
         "you!");
  text(4,"My vision is coming back...",
         "I see you... and... and...",
         "another woman?! Grr!");
  text(2,"Yo, take it easy, sister. If",
         "it weren't for me, you'd be",
         "stuck in that rock forever!");
  text(4,"Alright, listen up you little",
         "wench. Darin is ALL mine, you",
         "got that? You leave him alone.");
  text(2,"Bitch!","","");
  text(4,"Slut!","","");
  text(2,"Whore!","","");
  text(4,"Tramp!","","");
  text(2,"Darin, are you sure we melted",
         "the right crystal?","");
  text(1,"Girls, girls, please. We have",
         "to work together now. Try to",
         "get along!");
  text(4,"I suppose you're right... but",
         "you better sleep with one eye",
         "open, you hussy!");
  text(1,"Now it is time for us to go",
         "to Castle Heck and defeat",
         "Lord Stan once and for all!");
  text(4,"Right. It's time we fight for",
         "truth and justice in this",
         "world! Count me in!");
  text(2,"No enemy can stand in the",
         "face of me! I shall fight to",
         "my dying breath!");
  text(1,"Then let's bravely march forth!",
         "Come, troops! Out destination:",
         "the dreaded Castle Heck.");
  AlterBTile(18,91,226,0);
  AlterBTile(18,92,226,0);
  AddCharacter(4);
  flags[30]=1;
 }
}

event /* 22 */                                  // Master Chest Script
{
 if(!flags[var(0)])
 {
  AlterBTile(var(1),var(2),280,2);
  SoundEffect(3);
  GiveItem(var(3));
  flags[var(0)]=1;
 }
}

event /* 23 */                                  // Master Chest Auto-Exec
{
 if(flags[var(0)])
 {
  AlterBTile(var(1),var(2),280,2);
 }
}

event /* 24 */                                  // Master Switch Script
{
}

event /* 25 */                                  // Master Switch Auto-Exec
{
}

event /* 26 */
{
 SoundEffect(8);
 FakeBattle();
}

event /* 27 */
{
 ChainEvent(40,95,20,23,24,26);
}

event /* 28 */
{
 flags[96]+=1;
 if(flags[96]=8)
 {
  flags[96]=0;
 }
 for(a,0,4,1)
 {
  AlterBTile(13,22+a,533,1);
 }
 if(!flags[4000])
 {
  b=flags[96];
 }
 if(b=5)
 {
  b=3;
 }
 if(b=6)
 {
  b=2;
 }
 if(b=7)
 {
  b=1;
 }
 AlterBTile(13,22+b,226,0);
 if(b=0)
 {
  c=281;
 }
 if(b=1)
 {
  c=462;
 }
 if(b=2)
 {
  c=464;
 }
 if(b=3)
 {
  c=463;
 }
 if(b=4)
 {
  c=284;
 }
 AlterBTile(18,28,c,2);
 SoundEffect(3);
 WaitKeyUp();
}

event /* 29 */
{
 ChainEvent(40,97,18,36,24,36);
}

event /* 30 */
{
 ChainEvent(40,98,28,29,26,36);
}

event /* 31 */
{
 ChainEvent(40,99,14,41,23,40);
}

event /* 32 */
{
 if(!flags[100])
 {
  SoundEffect(3);
  AlterBTile(20,46,226,0);
  AlterBTile(20,47,533,1);
  AlterBTile(20,45,284,2);
  AlterBTile(19,47,284,2);
  if(facing(3))
  {
   warp(20,46,1);
  }
  WaitKeyUp();
  flags[100]=1;
  return;
 }
 if(flags[100])
 {
  SoundEffect(3);
  AlterBTile(20,46,533,1);
  AlterBTile(20,47,226,0);
  AlterBTile(20,45,281,2);
  AlterBTile(19,47,281,2);
  if(facing(1))
  {
   Warp(20,47,1);
  }
  WaitKeyUp();
  flags[100]=0;
 }
}

event /* 33 */
{
 SoundEffect(7);
 Banner("Save Point",3);
 EnableSave();
}

event /* 34 */
{
 DisableSave();
}

event /* 35 */
{
 Warp(42,57,0);
 Banner("B1",3);
}

event /* 36 */
{
 Warp(46,57,0);
 Banner("B1",3);
}
 
event /* 37 */
{
 Warp(18,37,0);
}

event /* 38 */
{
 Warp(22,37,0);
}
 
event /* 39 */					// Master 3-Vert Switch
{
 flags[var(0)]+=1;
 if(flags[var(0)]=4)
 {
  flags[var(0)]=0;
 }
 for(a,0,2,1)
 {
  AlterBTile(var(1),var(2)+a,533,1);
 }
 if(!flags[4000])
 {
  b==flags[var(0)];
 }
 if(b=3)
 {
  b=1;
 }
 AlterBTile(var(1),var(2)+b,226,0);
 if(b=0)
 {
  c=281;
 }
 if(b=1)
 {
  c=464;
 }
 if(b=2)
 {
  c=284;
 }
 AlterBTile(var(3),var(4),c,2);
 SoundEffect(3);
 WaitKeyUp();
} 

event /* 40 */					// Master 3-Horiz Switch
{
 flags[var(0)]+=1;
 if(flags[var(0)]=4)
 {
  flags[var(0)]=0;
 }
 for(a,0,2,1)
 {
  AlterBTile(var(1)+a,var(2),532,1);
 }
 if(!flags[4000])
 {
  b=flags[var(0)];
 }
 if(b=3)
 {
  b=1;
 }
 AlterBTile(var(1)+b,var(2),226,0);
 if(b=0)
 {
  c=281;
 }
 if(b=1)
 {
  c=464;
 }
 if(b=2)
 {
  c=284;
 }
 AlterBTile(var(3),var(4),c,2);
 SoundEffect(3);
 WaitKeyUp();
}

 
