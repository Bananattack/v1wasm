#! -*- python -*-
#
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import make_nacl_env
import nacl_utils
import os
import os.path

nacl_env = make_nacl_env.NaClEnvironment(use_c_plus_plus_libs=True)
nacl_env.Append(
    CPPPATH=['src/dumb/include'],
    CXXFLAGS='-std=gnu++0x',
    CPPDEFINES=['NO_FLAC', 'NO_SPEEX', 'NO_OGG', 'NO_MP3', 'AUDIERE_NACL']
)

nacl_env['STRIP'] = os.path.join(nacl_utils.FindToolchain(), 'bin', 'nacl-strip')

dumbSource = ['src/dumb/' + s for s in Split("""
    core/atexit.c
    core/duhlen.c
    core/duhtag.c
    core/dumbfile.c
    core/loadduh.c
    core/makeduh.c
    core/rawsig.c
    core/readduh.c
    core/register.c
    core/rendduh.c
    core/rendsig.c
    core/unload.c
    helpers/clickrem.c
    helpers/memfile.c
    helpers/resample.c
    helpers/sampbuf.c
    helpers/silence.c
    helpers/stdfile.c
    it/itload.c
    it/itload2.c
    it/itmisc.c
    it/itorder.c
    it/itread.c
    it/itread2.c
    it/itrender.c
    it/itunload.c
    it/loadmod.c
    it/loadmod2.c
    it/loads3m.c
    it/loads3m2.c
    it/loadxm.c
    it/loadxm2.c
    it/readmod.c
    it/readmod2.c
    it/reads3m.c
    it/reads3m2.c
    it/readxm.c
    it/readxm2.c
    it/xmeffect.c
""")]

audiereSource = ['src/audiere/' + s for s in Split("""
    basic_source.cpp
    cd_null.cpp
    debug.cpp
    device.cpp
    device_mixer.cpp
    device_nacl.cpp
    device_null.cpp
    dumb_resample.cpp
    file_ansi.cpp
    input.cpp
    input_aiff.cpp
    input_mod.cpp
    input_wav.cpp
    loop_point_source.cpp
    memory_file.cpp
    midi_null.cpp
    mpaudec/bits.c
    mpaudec/mpaudec.c
    noise.cpp
    resampler.cpp
    sample_buffer.cpp
    sound.cpp
    sound_effect.cpp
    square_wave.cpp
    threads_posix.cpp
    timer_posix.cpp
    tone.cpp
    utility.cpp
    version.cpp
""")]

sources = Split("""
andyvc.cpp  engine.cpp  menu.cpp    nichgvc.cpp ricvc.cpp   vc.cpp      xbigdvc.cpp
battle.cpp  entity.cpp  menu2.cpp   pcx.cpp     sound.cpp   vclib.cpp
control.cpp main.cpp    render.cpp  timer.cpp   vga.cpp

fs.cpp      nacl.cpp    stack.cpp   base64.cpp
""")
sources = ['src/' + s for s in sources]

nexes = nacl_env.AllNaClModules(sources + audiereSource + dumbSource, 'v1nacl')

archs = ['x86', 'x64']
nacl_env.AddPostAction(nexes, "$STRIP $TARGET")
